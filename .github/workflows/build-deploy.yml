name: Deploy to Amazon ECS

on:
  workflow_call:
    inputs:
      config-path:
        required: false
        type: string
    secrets:
      token:
        required: false

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  ECS_SERVICE: ${{ vars.ECS_SERVICE }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_TASK_DEFINITION: ${{ vars.ECS_TASK_DEFINITION }}
  CONTAINER_NAME: ${{ vars.CONTAINER_NAME }}

permissions:
  contents: read

jobs:

  checkout:
    name: Checkout
    
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
        with:
          repository: herrera396/Libs-pipeline
          ref: main
      
  build:
    name: Build Application
    
    runs-on: self-hosted
    needs: [checkout]
    
    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run build script
      run: npm run build
      
  deploy:
    name: Deploy Service
    
    runs-on: self-hosted
    needs: [build]
    
    steps:
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'

    - name: Authentication
      uses: docker/login-action@v3.1.0
      with:
        username: ${{secrets.DOCKERHUB_USER}}
        password: ${{secrets.DOCKERHUB_PWD}}

    - name: Build
      uses: docker/build-push-action@v5.3.0
      with:
        context: ./src
        file: ./src/Dockerfile
        push: true
        tags: |
          gabrielfherrera/proj_esteira:${{github.run_number}}
          gabrielfherrera/proj_esteira:latest

    - name: Push image to Amazon ECR
      id: Push-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: dev-
      run: |
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: 731083046316.dkr.ecr.us-east-1.amazonaws.com/dev-application-test-api:dev-

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
